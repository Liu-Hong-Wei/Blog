# docker-compose.yml

services:
  # 后端 Django 服务
  backend:
    build:
      context: ./backend
    container_name: blog_backend
    volumes:
      - ./backend:/app # 开发时挂载代码，方便热更新
    networks:
      - blog-network # 连接到博客内部网络
    environment:
      # 数据库连接信息
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
      # Django 设置
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - DEBUG=${DJANGO_DEBUG}
    depends_on:
      - db
    restart: unless-stopped

  # 前端 React 服务
  frontend:
    build:
      context: ./frontend
    container_name: blog_frontend
    volumes:
      - ./frontend:/app # 开发时挂载代码
      - /app/node_modules # 避免覆盖容器内的node_modules
    networks:
      - blog-network # 连接到博客内部网络
      - nginx-proxy # 连接到外部的 nginx-proxy 网络
    environment:
      # nginx-proxy 需要的环境变量
      - VIRTUAL_HOST=liuhongwei.org # 【重要】改成你的博客域名
      - LETSENCRYPT_HOST=liuhongwei.org # 【重要】改成你的博客域名
    depends_on:
      - backend
    restart: unless-stopped

  # PostgreSQL 数据库服务
  db:
    image: postgres:15-alpine
    container_name: blog_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - blog-network # 只在内部网络可访问
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  blog-network:
  nginx-proxy:
    external: true
